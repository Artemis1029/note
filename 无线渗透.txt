曾经北上广20%的公共网络是伪造的

http://bwrc.eecs.berkeley.edu/ 是了解未来发展的地方。
google：wireless adapter list monitor mode
http://www.kodingmadesimple.com/2017/01/best-kali-linux-compatible-wireless-adapters-dongles.html
http://www.freebuf.com/articles/wireless/140065.html
https://www.3mc2.com/2017-kali-linux-aircrack-best-compatible-usb-adapter.html
https://www.aircrack-ng.org/doku.php?id=compatibility_drivers 从前这个网站上面有各种网卡的各种说明，但是怎么突然没有了
2016推荐 TL-WN722n v1版本（atheros AR9271芯片）  v2的芯片不能支持monitor mode
芯片集：  Atheros 芯片集在windows与linux下都可以很好地使用
	最新支持：RTL8812AU  进入ac标准
	Atheros AR9271
	Ralink RT3070
	Ralink RT3572
	Ralink RT5572
	Realtek 8187
	BroadCom 服务器经常会采用这家公司的网卡
从3.0.1内核开始支持Ralink RT5370，这个是raspberry pi的无线网卡，20元购买，亲测可以使用
kali虚拟机有时候可能会连接不支持的网卡，kali单击如果不行了就重装系统以后重新支持
killer 网卡似乎不适合用来linux使用。xps 就是killer 1535.
目前最强的应该是AWUS036ACH（支持5G等，需要驱动安装），最有性价比的是Ralink RT5370（不需要安装驱动）

检测你的网卡行不行很简单额，直接看能不能抓捕另外一台电脑与手机之间无线的ping。

法律：
    美国的一些州要求会话中至少有一端能察觉被监听。没想到这么严格。
硬件设施：
    2.4GHz和5GHz ISM无限频段（工业、科技、医药）
    2.4GHz被划分为1-14编号的信道，5GHz被划分为36-165不连续编号的信道（美国）。不同国家对于信道的使用甚至在法律上作了规定。编号相近的信道之间存在的干扰较大。
    802.11a工作在5GHz，b/g工作在2.4GHz，n都可以。
    无线网卡要弄成Express card，就需要厂商研发支持的芯片组，改变交流方式。全向天线能提供最大接收角度。板式天线与锅式天线的聚焦程度都比较高
。http://www.l-com.com/  http://www.wifi-plus.com/ 
    wifi的发现方式有两种：1.主动发现。AP对探测请求进行应答，从而被发现。 如果关闭了“对广播请求的应答”就是关闭主动发现。 2.被动发现。因为AP自身会发成信号。所以被动发现可以便利所有的信道，虽然不会有SSID（wifi名字），但是被动发现能得到BSSID（MAC地址），并把SSID标志为未知。
    在美国，一台能接收转发无线频段的设备都有一个FCC认证码。在https://www.fcc.gov/ 可以通过这个找到对应产品包括内部结构图的信息。
身份认证：
        WEP定长密码，似乎也是分开破解，大大降低了破解难度。除了动态WEP，没有身份认证阶段。动态WEP不提供WEP密码，仅仅提供证书*.pem，形式上类似于SCUNET吧。现在需要收集6W个初始化向量就能破解。没有对重放攻击的检测，接收方会视为一个新的数据帧来处理，处理该ARP帧会使得AP发送一个使用新的初始化向量加密的广播ARP帧，所以通过重放攻击能快速收集完足够的初始化向量用于破解。其实没有必要使用重放攻击，直接使用假身份认证就好，只要符合加密标准就好，缺点就是假身份认证时间比较长。有客户端连接AP的时候，在Monitor mode下记录challenge 以及 加密以后的 密文，通过异或得到一个keystream，之后攻击者与AP认证的时候便可以使用这个keystream，能够建立关联关系。之后就进行arp注入攻击，收集arp reply中的IV。或者直接收集连接客户端的arp request进行重放攻击。由于802.11b 允许IV重复使用。所以AP接到这样的arp请求后就会回复客户端。这样攻击者就能搜集到更多的IV了。当捕捉到足够多的IV就可以按上面的2.9.1里的进行破解了。如果没有办法获取arp请求包我们就可以用-0 攻击使得合法客户端和AP断线后重新连接。-0 Deautenticate攻击实际就是无线欺骗。这样我们就有机会获得arp请求包了。 无身份验证的时候，攻击者自己伪造一个arp包，依靠这个包开始重放攻击。只有WEP支持假身份认证，如果侦听的信道不是AP的信道可能导致假认证失败。
        PIN码的分开破解
        WPA指明设备被认证至少支持临时密钥完整协议TKIP（基于RC4算法）。只需要获取一个连接客户端用于连接的握手包，之后就是跑字典了。 现在用的最多的是CCMP。
        WPA2表示设备认证必须支持TKIP和高级加密标准AES
        WPA还有两种实现形式： 都是使用了四次握手建立用于单播通信的成对瞬时密钥（PTK）以及用于多播和广播通信的组临时密钥（GTK）。加密密钥轮替使用。
        WPA Pre-Shared Key（WPA-PSK）PSK就是密码，限制长度为8-63位。WPA-psk 采用比较薄弱的RC4加密算法，所以黑客只要监听到足够的数据包，借助强大的计算设备，即使在TKIP的保护下，同样可能破解网络。 PTK和GTK使用预共享密钥生成，会进行hash运算4096次，密钥最长可以达63字符，SSID是hash的一部分。
        WPA-Enterprise 利用了802.1x，该标准最初应用于传统有线网络的交换机端口认证。这种配置下，接入点在无线客户端与有线客户端的RADIUS服务器（远程用户拨号认证系统）之间分程传送身份认证数据。802.1x详细介绍了如何使用可扩展认证协议EAP，方便多种认证机制的采用。如EAP-TTLS、PEAP、EAP-FAST。
	mixed WPA/WPA2 PSK  这种模式是现在常见的，同时支持两种模式按照连接设备的支持类型进行选择。
加密：
    客户端每一次切换到每一个支持的信道就会发出探测请求。
    如果网络认证为加密和开放的认证，那么任何人都是可以连接的，但是如果发送的数据帧没有正确加密，就会连接失败。加密类型不是唯一的，所以肯定有字段标识出使用的加密标准。身份认证成功以后产生本次交流密钥。
    信号隐蔽：将信标帧中的SSID去除掉，由于SSID是加入网络时候的必需的

不管是哪种无线连接加密模式，都可以暗中实现MITM攻击。在认证的开始前就进行中间人攻击，需要不断检测用户加入完咯，或者预先知道用户加入以后的IP。


无线网卡的三种模式：
    监听模式允许网卡不用连接wifi就可以抓取特性频道的数据，就是在空气中抓取某个波段的数据。可以用在破解wifi密码上
    混杂模式（连接wifi）就是接收所有经过网卡的数据包，包括不是发给本机的包，即不验证MAC地址
    普通模式下网卡只接收发给本机的包
Station Mode （客户端模式)是指无线网卡作为客户端接收信号。是一种较常用的方式。通俗的讲就是用于可无线配合连接互联网的连接模式。所以使用STA简写代表客户。
AP Mode 是指无线网卡作为一个AP发射无线信号，创建一个无线网络，并允许其他无线客户端接入。 也就是说和其它电脑连接组建局域网的时候使用这个模式。
	在Windows的情况下，驱动程序是封闭源的，这可以防止驱动程序开发人员以外的任何人提供监视模式功能。但是，对于允许的Windows，存在一些商业选项您可以利用自定义的无线网卡中的显示器模式支持驱动软件。

无线网卡有monitor mode，promiscuous mode（其实并没有这种模式，因为无线网卡是半双工的，不能同时收与发，虽然我的笔记本神奇过。如果非要说这种模式的话估计就是指能够在连接有线网路的时候，通过分享wifi的形式获取内网中的数据包）
monitor mode 直接从空气中获取无线信号，从而得到包
promiscuous mode 需要和AP点进行认证  
对wifi的攻击：aircrack-ng套件 Airfart抓包工具 https://hewlettpackard.github.io/wireless-tools/Tools.html#links
    airmon-ng start wlan0 将网卡设置成为混杂模式，并创建一个新接口mon0
    airdump-ng mon0（可以使用―channel 11指定11信道）
    aireplay-ng ―fakeauth 1000 -q 10 -a BSSID -h  源MAC mon0 以1s的延迟进行假身份认证攻击，每10s发送保持连线。从而方便进行重放攻击。
    aireplay-ng  ―arprelay -b BSSID -h  源MAC mon0   重放攻击并捕获文件
    aircrack-ng xxx.cap 
    向客户端与AP各自发送64帧数据（理论上一个帧就能够消除，相比64次有它的道理）从而消除一次认证。还有用DOS来消除认证的。有毒啊，怎么感觉消除认证做的很轻松。
    WPA-PSK现在只能使用自己掌握的字典以及针对常用ssid的彩虹表。如果使用GPU的话可以使用pyrit这个工具。只需要获取一个连接客户端用于连接的握手包，之后就是跑字典了。
    WPA-Enterprise 就是攻击EAP，通过握手包识别EAP类型，一些RADIUS服务器需要在握手包早期明文显示一个有效的用户名、域名。LEAP是轻量级EAP，它获取了MSCHAPv2的查询与应答，并在无线网路中传输，这样在任何情况下，都能看到查询与应答，为爆破提供了机会。EAP-TTLS与PEAP是两种常用的相似的EAP类型，接入点都看不到无线客户端和有线RADIUS之间建立的TLS连接。如果客户端配置错误，那么就不会验证RADIUS服务器的身份，从而引发MITM。使用TLS连接的，一般都是放松警惕的，估计里面全是直接明文。

PandoraBox里面就能查看连接用户的大概信号强弱。

GPS设备可以连接电脑，所以pi+无线网卡+GPS设备就能弄成一台wifi发现与简易攻击装置。

补充对wifi破解的研究：
http://aircrack-ng.org/doku.php?id=compatibility_drivers


知识补充：
	0.lorcon库用于inject 802.11 frame，比如PyLorcon2
	1.对于隐藏SSID，使用Wireless Mon可以发现，再使用CommViewforWiFi 有人连接时抓包，似乎可以判断出来是CMCC的隐藏wifi还是办公室的隐藏wifi。
	2.router里面的动态PPPoE，密码是变动的，也就是说你在路由器web页面上面通过“审查元素”看到的并不是真正密码。七夏对router配置文件进行了逆向，然而发现密码是明文直接写在里面的。
七夏突破的是办公室wifi，wifi密码是座机号码，web页面密码为空。
	3.一般的家用wifi同时在线人数能有30人就很不错了，店铺或许会使用像萤石X2这种商用Wi-Fi硬盘录像机，结合wifi以及电脑功能为一身的商用wifi，在开启私有WiFi的同时还可以开启顾客WiFi进行广告推送，方便顾客上网。现在的店铺wifi通过微信二维码已经不需要密码了，算是对wifi共享软件的回避。登录密码就在设备标签上面。
	4.BREW是Binary Runtime Environment for Wireless（无线二进制运行环境）的缩写，是一套完整的端到端的解决方案，由美国高通公司于2001年推出，运行在使用了CDMA技术的无线设备上，用于无线应用程序的开发、设备配置、应用分发以及计费和支付。从基本的层面而言，BREW 平台就是手持设备上嵌入式芯片操作系统的接口或抽象层。您可以将它看作是 PC 环境下 Microsoft Windows 的 Win32 API。
	5.下载全局配置文件cfg，获取整个路由配置信息(路由器登陆密码无法解密)，当然更暴力点也可以使用其他已知路由器加密密码替换目标配置文件加密密码，然后导入配置文件来重置目标密码。
	
WPS和PING码是很危险的功能
	6.路由器攻击（多了个DHCP，基本和服务器还是很像的）
主机访问网页，XSS 代码能获取到路由器的MAC，从而定位
CSRF漏洞
config文件泄漏攻击和替换攻击
恶意超长字符登录无响应漏洞
DHCP XSS攻击
　　虽然这种攻击很少出现对大多数路由器完全有效的XSS攻击，但这主要是因为任何与网络接口的操作互动，都必须在用户成功通过路由器验证并获得访问权限后。攻击的原理是通过DHCPREQUEST（scapy）将代码插入到DHCP列表中，当进行html显示的时候就会执行攻击。
	7.802.11ac 编码 是专门为5GHz频段设计，将吞吐量提高到了千兆级别。802.11ac、802.11n这些都是无线通信标准，最大的区别是工作的频段以及编码算法。5G是从802.11A开始，802.11n同时支持2.4GHz以及5GHz并支持MIMO。
	8.RTS与CTS就是CSMA/CA中的请求发送与发送完毕。
	9.2.4GHz段的干扰除了wifi以外，还有蓝牙、微波、无绳电话等等。
	10.接收信号时无线信号转变为高频电子脉冲，反之发射信号时高频电子脉冲转换为无线电波，这些过程中功率的变化往往是上万被的，所以如果使用W或者mW来计算不太方便，于是需要使用dBm这种进行功率的对数计算机，使用了一个较小的数值既可以很直观的表达对功率的变化，因此无线和声学系统都采用了dB这个单位。
	dB 是一个纯计数单位：dB = 10logX
	dBm 功率值与1mW进行比较dB值结果。除了dBm这个单位，以外还有dBi以及dBd粉笔诶用来描述全向天线辐射强度以及定向天线辐射强度。这两个单位只需要知道一下就好，一般还全部都是dBm。增加天线以后，电缆以及接头对功率是有损耗的，这部分要减掉。SSI Signal接收信号强度在0到-50dBm之间认为信号好。
	11.增益过高的全向天线会变成定向天线。并且朝向的方向不好控制。垂直方向上看过去会不对劲，不再是甜甜圈那种形状。被提醒选择天线的时候对功率增益适可而止。
	定向天线有一个挡板是为了将向后发射的信号，反射到前方去，确保定向。
	扇形的定向天线通常出现在移动网络通信。
	平面天线容易出现在办公区，美观。
	12.RADIOTAP包头虽然不在802.11标准中，但是都会有这个头。这个包头中允许产家自定义数据信息，但是不同产家之间没有办法沟通。它包含了如信号强度、频率等信息。Beacon包有这个头部，它还有SSID，BSSID以为是MAC层的帧所以一定也会有，是否支持WEP加密，发送方是否使属于一个BSS（一般出现在ad-hoc架构中）。
	13.总共三种帧：管理帧、控制帧、数据帧。
	学习网址：http://blog.chinaunix.net/uid-26366978-id-3253293.html
	控制帧：没有数据段。RTS、CTS、ACK（只会对单播帧确认，为了尽快响应，采用硬件判断）、Ps-Poll
	管理帧：比如说Beacon、Probe Request、Probe Reply（需要速率与SSID正确）、关系建立、关系解除
	PS：只有发送大的数据（阈值由驱动程序定义）的时候才会要求CSMA/CA，发送RTS与CTS，因为STA之间可能距离过远，所以需要无线路由器发送CTS包通知。CTS为发送者预留带宽同时通知所有站点保持静默。为了防止陷入碰撞循环，RTS以及CTS包很小，确保第一时间发送完毕。
	数据发送端向AP发送RTS，AP发送CTS广播给所有连入用户。CTS包中没有告知是谁发送出来的，即包中并没有transmission address。结束以后会广播一个ACk，告知约定的时间已经耗尽。
	probe请求-》认证-》关联-》取消关联-》重新关联等。
	Beacon中的信息与Probe Reply中的信息似乎基本是一样的。
	14.无线网卡供电有两种模式：活动模式 与 省电模式，在客户端的数据帧中可以看出（AP不乎使用这个字段）。无线网卡内部内部有个放大器，这是最耗电的组件。省电模式下，几乎不接受任何数据，只接受到来自AP的特定类型的数据帧（唤醒帧）。别人给他发数据的时候，AP会先缓存，然后向它发送唤醒帧，唤醒以后就会主动向AP索取，取回帧的名字叫做Ps Poll（Beacon中的TIM标志），每一次发过去一个就会返回一个缓存帧（如果AP比较繁忙就会先返回一个简单的包，过了几个原子周期以后才会在发出缓存帧），自己还需要发出ACK帧确认。交流结束以后就会在吃进入省电模式。
	一个完整的传输过程称为一个原子周期
	进入省电模式的时候会发送大量的空数据包来告知AP，自己要进入省电模式了。
	15.一个AP可以起多个网络的名称（2.4G与5G），传闻会随机产生多个BSSID。
	16.隐藏AP目前知道两种技术：
	1.不发送SSID广播
	2.在之后的包中都不包含SSID，从而之后用户都不能连入。
	PS：被动扫描并不能知道SSID名字
	17.WEP Open认证的时候输入的错误的密码，而本来不应该输入密码，这样认证虽然会通过，但是之后的数据传输过程中，AP会将连接客户端的包丢弃。WEP加密的时候，传输密钥的方式是将AP传来的一串随机数128字节的Challenge Text通过密钥加密以后传递回去。大部分无线驱动连接AP的时候会无视AP的公告，尝试先使用Open的方式连接。
	需要注意的一件事情是Open网络没有加密。
	18.AP可能会验证MAC的是否合法，基本就是看前面三个字节产商ID。
	19.无线嗅探
	可行方法有：流量镜像（无线集线器）、airbase-ng 伪造AP接入点、arp攻击（定制的requeist或者reply，能接触电脑就直接静态绑定）
	首先要保证无线网卡的信道与Ap的信道一致。
	直接将网卡设置为monitor mode 以后，使用wireshark捕捉看到Beacon、Probe Request、Probe Response 以及广播的数据帧，sniffer到没有连接到AP的包，只有第二层包，直接看到了RTS、CTS包却看不到中间的数据，Open AP的包也能直接被嗅探。否则看到数据全部都是加密了的数据帧。设置为monitor mode将不能再加入无线网络，并且ettercap也不能指定为这个网卡。虽然返回的包中有Set-Cookie这种重要信息，但是我并不满意。导入Cookie的时候使用js在地址栏就能导入。
	windows对arp攻击防不住，但是360安全卫士的arp防火墙可以，基本防住了，但是又一次虽然给出提示语防御成功的通知，但是我还是成功MITM了。有件事情值得注意，因为windows防火墙的原因，ping和nmap等都会失败，所以推荐使用netdiscover -r 来发现主机，如果ettercap中没有找到就使用arpspoof。
	手机对arp攻击有自己的防御，而且部分手机在息屏的状态下可能进入休眠状态，于是就退出了wifi。
	

	20.arp攻击以后，一般的无线网卡都能抓到返回的由AP发送给客户端的包。
	21.通过airodump-ng可以知道无线网卡想要连接的wifi ssid与bssid，再加上大部分网卡驱动的实现是先尝试用Open的方式连接一下AP，这时候你根据这样的信息创建一个一样的Open AP，就能攻击目标设备了。
	22.DHCP的网址是根据MAC来定的，而且应该和主机自己申请并没有什么关系，我进入 kali live USB，还是原来windows下的ip。网关直接根据dhcp记录分配ip，而不是看arp缓存，所以可以提前进行arp MITM。
	23.从车里将一个中继器（比如树莓派）扔出去，然后进行信号中继。不过如今市场上已经有这种中继产品。然后在车里面进行攻击。
	24.WPS（Wi-Fi  protected setup）是一个很不安全的功能，可以使用图形化工具fern-wifi-cracker（regular attack 用于破解WPA）。  破解顺序是先1~4位，然后5~7位。最后一位作为验证。破解的时间反正一定会比WPA少（如果你已经使用过自己的弱密码字典却没有破解出来）。
	25.不过现在的路由器连接方式已经可以变得很奇怪了，比如说360安全路由， 支持通过设备与无线路由接触自动连接网络，从而保证密码不会外泄。估计其中使用了对接收点的信号判断，从而知道是谁在碰触，内部应该也有给震动感应装置，一旦震动并且已经开启这个功能就会触发程序进行判断。
	26.现在已经是ESSID，出现扩展的SSID的原因，是因为像SCUNET这样子的网络，不同的设备提供一样的服务。这种行为叫做参加扩展服务集ESS。
	27.	

命令：
	wireshark 中可以直接指定支持的无线网卡为monitor mode，右键面板可以显示出一个“无线工具栏”可以指定监听信道
		学习网站：http://cdn.ttgtmedia.com/searchNetworking/downloads/Orebaugh_Wireshark_Chapter_6.pdf
	ifconfig wlan up 将wlan0这个插入的无线网卡启动起来。之后可以用ifconfig查看到。
	iw list 查看当前无线网卡的信息以及对支持的情况。包括能否monitor模式。
	iwlist 接口名字 channel 查看网卡支持的接口
	iwconfig 没有参数是查看当前网卡状态，如果后面加上参数就是对网卡进行配置。
	iwpriv 设置无线网卡的私有配置参数
	iw dev 接口名字  interface del  去掉原有的接口模式
	iw dev 接口名字 interface  add xxxx type monitor/managed  新增一个接口处于monitor/正常模式
	ifconfig wlan0 down #先停止wlan0
	iwconfig wlan0 mode monitor  #将网卡切为monitor模式 
	iwconfig wlan0 mode managed #切换为正常模式
	ifconfig wlan0 up #启动wlan0
	iw dev 接口 scan | grep SSID 这个命令发送了定向探测包
	使用airodump-ng之前需要关闭network-manager服务
	airmon-ng check 检测aircrack是否与当前环境可能有冲突，居然与dhclient有冲突。使用套件工具建议先执行一下下。
	airmon-ng check kill 杀死所有相关的进程，如果进程有依赖关系，那么最后看到的回显是kill掉部分进程
	airmon-ng 直接执行意味着查看当前网卡的信息
	airmon-ng start/stop wlan0mon
	airmon-ng start/stop 接口名字  信道 （如果你不自己指定信道就会选一个给你，信道有交叉，抓到别的信道并不奇怪）
	airodump-ng 接口名字  虽然置入monitor mode的时候指定了信道，但是使用airodump-ng就会在所有信道上轮询
		--bssid MAC  指定想要抓的AP   
		-essid ESSID 指定AP的SSID（essid与bssid都是对包中内容进行刷选所以任意选择一个就好了，有时候通过一个essid会有U盾讴歌bssid）
		--channel 信道  指定希望dump 的信道 支持通过逗号指定多个信道 
		-w 将抓到的信息保存下来，指定文件名字，会产生一批文件
		CIPHER 下显示的是使用哪种加密套件
		DATA 字段下面的数字 是 当前已经抓到的IV值数量
		即便AP的SSID隐藏，也会显示出长度
		可以知道开着wifi的连接设备当前想要连什么SSID、什么BSSID的AP
		正在抓包的时候，可以复制出一份到其他位置，然后通过wireshark打开看一下。
	aireplay-ng -9 接口名字《=》airplay --test 接口名字   测试网卡是否可以进行注入以及当前网卡注入的能力怎么样
		-e ESSID
		-a AP的BSSID
		-1 xx -y xxx -a xxx -h xxx 使用keystream进行不断认证
		-y keystream文件（airodump-ng -w得到的xor文件）
		-h hacker的BSSID
	airbase-ng -e “belkin.3448” mon0 建立伪造AP CMCC-Free
		因为无线网卡基本是半双工的，所以需要两个网卡，用于AP伪造
		学习网址：http://www.freebuf.com/articles/wireless/33948.html
		apt-get install bridge-utils
		brctl addbr mitm   通过桥接连接两个网卡
		brctl addif mitm eth0
		brctl addif mitm at0
		ifconfig eth0 0.0.0.0 up  分别启动两个网卡与创建的网桥
		ifconfig at0 0.0.0.0 up 
		ifconfig mitm 192.168.1.10 up
		route add-net 0.0.0.0 netmask 0.0.0.0 gw 192.168.1.1 让另外一个网卡上网
		dhclient3 mitm&  据说这条命令是给连接上我们伪造AP的被攻击者的电脑分配IP
		dnsspoof -i mitm -f host   host文件的格式与/etc/hosts中的格式要是一样的
		使用抓包软件获取at0网卡上的流量
		还有用于伪造AP的程序叫做hostapd（有一个补丁hostapd-wpe，提供了多种wifi认证，看似有了密码，但是实际上任何密码都可以进去，我们最后通过alseap指定字典对我们发送的challenge以及加密以后的response进行解密），3vilTwinAttacker（这个方便的图形化工具需要注意MOdule-》setting-》iptables）。为了匹配真的证书去伪造证书的详细资料也许会很痛苦（公司中的wifi可能登陆还需要一个CA证书）因此，可以用python脚本来辅助我们，通过命名apd_launchpad是一个方便的方法来创建hostapd-wpe配置文件和关联的伪造证书。
		dhcp服务需要使用dhcpd
	airserv-ng 通过网络提供无线网卡  可以将无线网卡连接至某一特定端口，之后对端口的抓包就是对网卡
		airserv-ng -p 端口号 -d 接口名字
		dirodump-ng IP:端口号 就相当于是对网卡上流量进行抓包
	airdecap-ng  用于解开处于加密状态的通过抓包获取的数据包:
		airdecap-ng -b <AP MAC> 1.pcap  去除802.11 包头	
		airdecap-ng -w <WEP key> -b <AP MAC> 1.pcap 解密WEP加密数据，需要建立关联关系的包
		airdecap-ng -e ESSID -p <PSK> -b <AP mAC> 1.pcap 解密WPA加密数据，抓包文件中必须含有四步握手信息才能解包
		所以即便是加密的流量也应该抓下来，只要你能get密码，就可以解决。
	airtun-ng 形成虚拟隧道
		需要提供AP的BSSID、ESSID、passwd，之后会创建一个at0接口，需要ifconfig at0 up。
		需要获取握手信息，然后借助wIDS（无线IDS）对流量中特征匹配特征库进行判断
		形成以一个隧道接口，将无线的流量镜像到隧道接口上。然后将这个隧道接口连接IDS接口，或者直接抓包，需要保证流量是明文的。也就是说配合将网卡弄成无线入侵监测系统wIDS。然后每一个固定时间周期内进行流量的分析。
		Airtun-ng还具有转发器和tcpreplay类型功能，并可选择通过bssid与网络掩码一起过滤流量，并重播剩余流量。
	bessid-ng(抓包系列命令的简化):  主要功能就是将发送认证解除包，并抓捕之后的四步握手包，可以将包上传到指定的破解服务器。就是将之前的简单化。
	
		
	无线攻击套件：mitmf

	
	